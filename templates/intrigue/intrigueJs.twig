<script type="text/javascript">
    function addIntrigueHasObjectifForm(collectionHolder, $newObjectifLinkLi) {
        // Récupère l'élément ayant l'attribut data-prototype comme expliqué plus tôt
        const prototype = collectionHolder.attr('data-prototype');

        // Remplace '__name__' dans le HTML du prototype par un nombre basé sur
        // la longueur de la collection courante
        const newForm = prototype.replace(/__name__/g, collectionHolder.children().length);

        // Affiche le formulaire dans la page dans un li, avant le lien "ajouter un tag"
        const $newFormLi = $('<li class="list-group-item"></li>').append(newForm);
        $newObjectifLinkLi.before($newFormLi);

        // ajoute un lien de suppression au nouveau formulaire
        addIntrigueHasObjectifFormDeleteLink($newFormLi);
    }

    function addIntrigueHasDocumentForm(collectionHolder, $newDocumentLinkLi) {
        // Récupère l'élément ayant l'attribut data-prototype comme expliqué plus tôt
        const prototype = collectionHolder.attr('data-prototype');

        // Remplace '__name__' dans le HTML du prototype par un nombre basé sur
        // la longueur de la collection courante
        const newForm = prototype.replace(/__name__/g, collectionHolder.children().length);

        // Affiche le formulaire dans la page dans un li, avant le lien "ajouter un tag"
        const $newFormLi = $('<li class="list-group-item"></li>').append(newForm);
        $newDocumentLinkLi.before($newFormLi);

        // ajoute un lien de suppression au nouveau formulaire
        addIntrigueHasDocumentFormDeleteLink($newFormLi);
    }

    function addIntrigueHasLieuForm(collectionHolder, $newLinkLi) {
        // Récupère l'élément ayant l'attribut data-prototype comme expliqué plus tôt
        const prototype = collectionHolder.attr('data-prototype');

        // Remplace '__name__' dans le HTML du prototype par un nombre basé sur
        // la longueur de la collection courante
        const newForm = prototype.replace(/__name__/g, collectionHolder.children().length);

        // Affiche le formulaire dans la page dans un li, avant le lien "ajouter un tag"
        const $newFormLi = $('<li class="list-group-item"></li>').append(newForm);
        $newLinkLi.before($newFormLi);

        // ajoute un lien de suppression au nouveau formulaire
        addIntrigueHasLieuFormDeleteLink($newFormLi);
    }

    function addIntrigueHasEvenementForm(collectionHolder, $newEvenementLinkLi) {
        // Récupère l'élément ayant l'attribut data-prototype comme expliqué plus tôt
        const prototype = collectionHolder.attr('data-prototype');

        // Remplace '__name__' dans le HTML du prototype par un nombre basé sur
        // la longueur de la collection courante
        const newForm = prototype.replace(/__name__/g, collectionHolder.children().length);

        // Affiche le formulaire dans la page dans un li, avant le lien "ajouter un tag"
        const $newFormLi = $('<li class="list-group-item"></li>').append(newForm);
        $newEvenementLinkLi.before($newFormLi);

        // ajoute un lien de suppression au nouveau formulaire
        addIntrigueHasEvenementFormDeleteLink($newFormLi);
    }

    function addIntrigueHasGroupeForm(collectionHolder, $newGroupeLinkLi) {
        // Récupère l'élément ayant l'attribut data-prototype comme expliqué plus tôt
        const prototype = collectionHolder.attr('data-prototype');

        // Remplace '__name__' dans le HTML du prototype par un nombre basé sur
        // la longueur de la collection courante
        const newForm = prototype.replace(/__name__/g, collectionHolder.children().length);

        // Affiche le formulaire dans la page dans un li, avant le lien "ajouter un tag"
        const $newFormLi = $('<li class="list-group-item"></li>').append(newForm);
        $newGroupeLinkLi.before($newFormLi);

        // ajoute un lien de suppression au nouveau formulaire
        addIntrigueHasGroupeFormDeleteLink($newFormLi);
    }

    function addIntrigueHasGroupeSecondaireForm(collectionHolder, $newGroupeLinkLi) {
        // Récupère l'élément ayant l'attribut data-prototype comme expliqué plus tôt
        const prototype = collectionHolder.attr('data-prototype');

        // Remplace '__name__' dans le HTML du prototype par un nombre basé sur
        // la longueur de la collection courante
        const newForm = prototype.replace(/__name__/g, collectionHolder.children().length);

        // Affiche le formulaire dans la page dans un li, avant le lien "ajouter un tag"
        const $newFormLi = $('<li class="list-group-item"></li>').append(newForm);
        $newGroupeLinkLi.before($newFormLi);

        // ajoute un lien de suppression au nouveau formulaire
        addIntrigueHasGroupeSecondaireFormDeleteLink($newFormLi);
    }

    function addIntrigueHasObjectifFormDeleteLink($intrigueHasObjectifFormLi) {
        const $removeFormA = $('<span class="input-group-btn"><a class="btn btn-secondary" href="#"><i class="fa fa-trash"></i> Retirer cet objectif</a></span>');
        $($intrigueHasObjectifFormLi).append($removeFormA);

        $removeFormA.on('click', function (e) {
            // empêche le lien de créer un « # » dans l'URL
            e.preventDefault();

            // supprime l'élément li pour le formulaire de tag
            $intrigueHasObjectifFormLi.remove();
        });
    }

    function addIntrigueHasDocumentFormDeleteLink($intrigueHasDocumentFormLi) {
        const $removeFormA = $('<span class="input-group-btn"><a class="btn btn-secondary" href="#"><i class="fa fa-trash"></i> Retirer ce document</a></span>');
        $($intrigueHasDocumentFormLi).append($removeFormA);

        $removeFormA.on('click', function (e) {
            // empêche le lien de créer un « # » dans l'URL
            e.preventDefault();

            // supprime l'élément li pour le formulaire de tag
            $intrigueHasDocumentFormLi.remove();
        });
    }

    function addIntrigueHasLieuFormDeleteLink($intrigueHasLieuFormLi) {
        const $removeFormA = $('<span class="input-group-btn"><a class="btn btn-secondary" href="#"><i class="fa fa-trash"></i> Retirer cette instance</a></span>');
        $($intrigueHasLieuFormLi).append($removeFormA);

        $removeFormA.on('click', function (e) {
            // empêche le lien de créer un « # » dans l'URL
            e.preventDefault();

            // supprime l'élément li pour le formulaire de tag
            $intrigueHasLieuFormLi.remove();
        });
    }

    function addIntrigueHasEvenementFormDeleteLink($intrigueHasEvenementFormLi) {
        const $removeFormA = $('<span class="input-group-btn"><a class="btn btn-secondary" href="#"><i class="fa fa-trash"></i> Retirer cet événement</a></span>');
        $($intrigueHasEvenementFormLi).append($removeFormA);

        $removeFormA.on('click', function (e) {
            // empêche le lien de créer un « # » dans l'URL
            e.preventDefault();

            // supprime l'élément li pour le formulaire de tag
            $intrigueHasEvenementFormLi.remove();
        });
    }

    function addIntrigueHasGroupeFormDeleteLink($intrigueHasGroupeFormLi) {
        const $removeFormA = $('<span class="input-group-btn"><a class="btn btn-secondary" href="#"><i class="fa fa-trash"></i></a></span>');
        $('select', $intrigueHasGroupeFormLi).wrap('<div class="input-group"></div>');
        $('select', $intrigueHasGroupeFormLi).after($removeFormA);

        $removeFormA.on('click', function (e) {
            // empêche le lien de créer un « # » dans l'URL
            e.preventDefault();

            // supprime l'élément li pour le formulaire de tag
            $intrigueHasGroupeFormLi.remove();
        });
    }

    function addIntrigueHasGroupeSecondaireFormDeleteLink($intrigueHasGroupeSecondaireFormLi) {
        const $removeFormA = $('<span class="input-group-btn"><a class="btn btn-secondary" href="#"><i class="fa fa-trash"></i></a></span>');
        $('select', $intrigueHasGroupeSecondaireFormLi).wrap('<div class="input-group"></div>');
        $('select', $intrigueHasGroupeSecondaireFormLi).after($removeFormA);

        $removeFormA.on('click', function (e) {
            // empêche le lien de créer un « # » dans l'URL
            e.preventDefault();

            // supprime l'élément li pour le formulaire de tag
            $intrigueHasGroupeSecondaireFormLi.remove();
        });
    }

    jQuery(document).ready(function () {
        // Récupère le div qui contient la collection de tags
        const collectionGroupeHolder = $('ul.intrigueHasGroupes');
        const collectionGroupeSecondaireHolder = $('ul.intrigueHasGroupeSecondaires');
        const collectionDocumentHolder = $('ul.intrigueHasDocuments');
        const collectionLieuHolder = $('ul.intrigueHasLieus');
        const collectionEvenementHolder = $('ul.intrigueHasEvenements');
        const collectionObjectifHolder = $('ul.intrigueHasObjectifs');

        // ajoute un lien « add a tag »
        const $addIntrigueHasGroupeLink = $('<a href="#" class="add_intrigueHasGroupe_link btn btn-secondary">Ajouter un groupe</a>');
        var $newGroupeLinkLi = $('<li class="list-group-item"></li>').append($addIntrigueHasGroupeLink);

        const $addIntrigueHasGroupeSecondaireLink = $('<a href="#" class="add_intrigueHasGroupeSecondaire_link btn btn-secondary">Ajouter un groupe secondaire</a>');
        const $newGroupeSecondaireLinkLi = $('<li class="list-group-item"></li>').append($addIntrigueHasGroupeSecondaireLink);

        const $addIntrigueHasDocumentLink = $('<a href="#" class="add_intrigueHasDocument_link btn btn-secondary">Ajouter un document</a>');
        var $newDocumentLinkLi = $('<li class="list-group-item"></li>').append($addIntrigueHasDocumentLink);

        const $addIntrigueHasLieuLink = $('<a href="#" class="add_intrigueHasLieu_link btn btn-secondary">Ajouter une instance</a>');
        const $newLieuLinkLi = $('<li class="list-group-item"></li>').append($addIntrigueHasLieuLink);

        const $addIntrigueHasEvenementLink = $('<a href="#" class="add_intrigueHasEvenement_link btn btn-secondary">Ajouter un événement</a>');
        var $newEvenementLinkLi = $('<li class="list-group-item"></li>').append($addIntrigueHasEvenementLink);

        const $addIntrigueHasObjectifLink = $('<a href="#" class="add_intrigueHasObjectif_link btn btn-secondary">Ajouter un objectif</a>');
        var $newObjectifLinkLi = $('<li class="list-group-item"></li>').append($addIntrigueHasObjectifLink);


        // ajoute un lien de suppression à tous les éléments li de
        // formulaires de tag existants
        collectionGroupeHolder.find('li').each(function () {
            addIntrigueHasGroupeFormDeleteLink($(this));
        });

        collectionGroupeSecondaireHolder.find('li').each(function () {
            addIntrigueHasGroupeSecondaireFormDeleteLink($(this));
        });

        collectionDocumentHolder.find('li').each(function () {
            addIntrigueHasDocumentFormDeleteLink($(this));
        });

        collectionLieuHolder.find('li').each(function () {
            addIntrigueHasLieuFormDeleteLink($(this));
        });

        collectionEvenementHolder.find('li').each(function () {
            addIntrigueHasEvenementFormDeleteLink($(this));
        });

        collectionObjectifHolder.find('li').each(function () {
            addIntrigueHasObjectifFormDeleteLink($(this));
        });

        // ajoute l'ancre « ajouter un tag » et li à la balise ul
        collectionGroupeHolder.append($newGroupeLinkLi);
        collectionGroupeSecondaireHolder.append($newGroupeSecondaireLinkLi);
        collectionDocumentHolder.append($newDocumentLinkLi);
        collectionLieuHolder.append($newLieuLinkLi);
        collectionEvenementHolder.append($newEvenementLinkLi);
        collectionObjectifHolder.append($newObjectifLinkLi);

        $addIntrigueHasGroupeLink.on('click', function (e) {
            // empêche le lien de créer un « # » dans l'URL
            e.preventDefault();

            // ajoute un nouveau formulaire tag (voir le prochain bloc de code)
            addIntrigueHasGroupeForm(collectionGroupeHolder, $newGroupeLinkLi);
        });

        $addIntrigueHasGroupeSecondaireLink.on('click', function (e) {
            // empêche le lien de créer un « # » dans l'URL
            e.preventDefault();

            // ajoute un nouveau formulaire tag (voir le prochain bloc de code)
            addIntrigueHasGroupeSecondaireForm(collectionGroupeSecondaireHolder, $newGroupeSecondaireLinkLi);
        });

        $addIntrigueHasDocumentLink.on('click', function (e) {
            // empêche le lien de créer un « # » dans l'URL
            e.preventDefault();

            // ajoute un nouveau formulaire tag (voir le prochain bloc de code)
            addIntrigueHasDocumentForm(collectionDocumentHolder, $newDocumentLinkLi);
        });

        $addIntrigueHasLieuLink.on('click', function (e) {
            // empêche le lien de créer un « # » dans l'URL
            e.preventDefault();

            // ajoute un nouveau formulaire tag (voir le prochain bloc de code)
            addIntrigueHasLieuForm(collectionLieuHolder, $newLieuLinkLi);
        });

        $addIntrigueHasEvenementLink.on('click', function (e) {
            // empêche le lien de créer un « # » dans l'URL
            e.preventDefault();

            // ajoute un nouveau formulaire tag (voir le prochain bloc de code)
            addIntrigueHasEvenementForm(collectionEvenementHolder, $newEvenementLinkLi);
        });

        $addIntrigueHasObjectifLink.on('click', function (e) {
            // empêche le lien de créer un « # » dans l'URL
            e.preventDefault();

            // ajoute un nouveau formulaire tag (voir le prochain bloc de code)
            addIntrigueHasObjectifForm(collectionObjectifHolder, $newObjectifLinkLi);
        });

        $("#intrigue_intrigueHasGroupes").parent().remove();
        $("#intrigue_intrigueHasGroupeSecondaires").parent().remove();
        $("#intrigue_intrigueHasDocuments").parent().remove();
        $("#intrigue_intrigueHasLieus").parent().remove();
        $("#intrigue_intrigueHasEvenements").parent().remove();
        $("#intrigue_intrigueHasObjectifs").parent().remove();
    });
</script>
