{% extends "layout.twig"  %}

{% block title %}Ajout d'un billet{% endblock %}

{% block content %}
    
	<ol class="breadcrumb">
		<li><a href="{{ path('homepage') }}">Accueil</a></li>
		<li><a href="{{ path("gn.list") }}">Liste des grandeur nature</a></li>
		<li><a href="{{ path('gn.detail', {'gn':participant.gn.id}) }}">{{ participant.gn.label }}</a></li>
		<li><a href="{{ path('gn.participants', {'gn':participant.gn.id}) }}">Liste des participants</a></li>
		<li class="active">Gestion des lieux de restauration</li>
	</ol>

	<div class="well bs-component">
		<form action="{{ path('participant.restauration', {'participant': participant.id}) }}" method="POST" {{ form_enctype(form) }}>
			<fieldset>
				<legend>Selectionnez les restaurations de {{ participant.user.etatCivil.nom }} {{ participant.user.etatCivil.prenom }}</legend>
					{% form_theme form 'Form/bootstrap_3_layout.html.twig' %}
						<ul class="list-group participantHasRestaurations" data-prototype="{{ form_widget(form.participantHasRestaurations.vars.prototype)|e }}">
					    	{% for participantHasRestauration in form.participantHasRestaurations %}
					       		<li class="list-group-item">{{ form_widget(participantHasRestauration.restauration) }}</li>
					       	{% endfor %}
						</ul>
					{{ form_rest(form) }}
			</fieldset>
		</form>
	</div>
	
{% endblock content %}

{% block javascript %}
<script>

		function addParticipantHasRestaurationForm(collectionHolder, $newLinkLi) {
		    // Récupère l'élément ayant l'attribut data-prototype comme expliqué plus tôt
		    var prototype = collectionHolder.attr('data-prototype');

		    // Remplace '__name__' dans le HTML du prototype par un nombre basé sur
		    // la longueur de la collection courante
		    var newForm = prototype.replace(/__name__/g, collectionHolder.children().length);
	
		    // Affiche le formulaire dans la page dans un li, avant le lien "ajouter un tag"
		    var $newFormLi = $('<li class="list-group-item"></li>').append(newForm);
		    $newLinkLi.before($newFormLi);

			 // ajoute un lien de suppression au nouveau formulaire
		    addParticipantHasRestaurationFormDeleteLink($newFormLi);
		}

		function addParticipantHasRestaurationFormDeleteLink($participantHasRestaurationFormLi) {
		    var $removeFormA = $('<span class="input-group-btn"><a class="btn btn-link" href="#"><span class="glyphicon glyphicon-remove-circle" aria-hidden="true"></span></a></span>');
		    $('select',$participantHasRestaurationFormLi).wrap('<div class="input-group"></div>');
		    $('select',$participantHasRestaurationFormLi).after($removeFormA);

		    $removeFormA.on('click', function(e) {
		        // empêche le lien de créer un « # » dans l'URL
		        e.preventDefault();

		        // supprime l'élément li pour le formulaire de tag
		        $participantHasRestaurationFormLi.remove();
		    });
		}
		
		// Récupère le div qui contient la collection de tags
		var collectionHolder = $('ul.participantHasRestaurations');
		
		// ajoute un lien « add a tag »
		var $addParticipantHasRestaurationLink = $('<a href="#" class="add_participantHasRestauration_link">Ajouter une restauration</a>');
		var $newLinkLi = $('<li class="list-group-item"></li>').append($addParticipantHasRestaurationLink);
		
		jQuery(document).ready(function() {

			// ajoute un lien de suppression à tous les éléments li de
		    // formulaires de tag existants
		    collectionHolder.find('li').each(function() {
		        addParticipantHasRestaurationFormDeleteLink($(this));
		    });
		    
		    // ajoute l'ancre « ajouter un tag » et li à la balise ul
		    collectionHolder.append($newLinkLi);
		
		    $addParticipantHasRestaurationLink.on('click', function(e) {
		        // empêche le lien de créer un « # » dans l'URL
		        e.preventDefault();
		
		        // ajoute un nouveau formulaire tag (voir le prochain bloc de code)
		        addParticipantHasRestaurationForm(collectionHolder, $newLinkLi);
		    });
		});
		
</script>
{% endblock javascript %}