{% extends "layout.twig" %}

{% block title %}Statistique{% endblock title %}

{% block content %}

	<ol class="breadcrumb">
		<li><a href="{{ path('homepage') }}">Accueil</a></li>
		<li class="active">Statistique</li>
	</ol>
	
	<div class="panel panel-default">
		<div class="panel-body">
			<table class="table">
				<thead>
					<tr>
						<th>Nombre de places ouverte</th>
						<th>Nombre d'utilisateurs</th>
						<th>Nombre d'utilisateurs ayant rempli leur état-civil</th>
						<th>Nombre d'utilisateurs ayant créé leur personnage</th>
					</tr>
				</thead>
				<tbody>
					<tr>
						<td>{{ places }}</td>
						<td>{{ userCount }}</td>
						<td>{{ participantCount }}</td>
						<td>{{ personnageCount }}</td>
					</tr>
				</tbody>
			</table>
			
			{% set ratio = (personnageCount * 100) / places %}
			<h4>Pourcentage de personnages créé (personages/places ouverte)</h4>
			<div class="progress">
		  		<div class="progress-bar" role="progressbar" aria-valuenow="{{ ratio }}" aria-valuemin="0" aria-valuemax="100" style="width: {{ ratio }}%;">
		    		{{ ratio }}%
		  		</div>
			</div>
			
			{% set ratio = (participantCount * 100) / userCount %}
			<h4>Pourcentage d'état civil rempli (etat civil/utilisateurs)</h4>
			<div class="progress">
		  		<div class="progress-bar" role="progressbar" aria-valuenow="{{ ratio }}" aria-valuemin="0" aria-valuemax="100" style="width: {{ ratio }}%;">
		    		{{ ratio }}%
		  		</div>
			</div>
			
			{% set ratio = (personnageCount * 100) / userCount %}
			<h4>Pourcentage de création de personnages par les utilisateurs (personnages/utilisateurs)</h4>
			<div class="progress">
		  		<div class="progress-bar" role="progressbar" aria-valuenow="{{ ratio }}" aria-valuemin="0" aria-valuemax="100" style="width: {{ ratio }}%;">
		    		{{ ratio }}%
		  		</div>
			</div>
		</div>
	</div>
	
	<div class="row">
		<div class="col-sm-4">
			<div class="panel panel-default">
				<div class="panel-heading">
					Répartition des territoires par langues
				</div>
				<div class="panel-body">
					<canvas id="myChart"></canvas>
				</div>
			</div>
		</div>
		<div class="col-sm-4">
			<div class="panel panel-default">
				<div class="panel-heading">
					Répartition des personnages par classe.
				</div>
				<div class="panel-body">
					<canvas id="myChartClasses"></canvas>
				</div>
			</div>
		</div>
		<div class="col-sm-4">
			<div class="panel panel-default">
				<div class="panel-heading">
					Répartition des personnages par genre.
				</div>
				<div class="panel-body">
					<canvas id="myChartGenres"></canvas>
				</div>
			</div>
		</div>
		<div class="col-sm-4">
			<div class="panel panel-default">
				<div class="panel-heading">
					Répartition des compétences par personnage.
				</div>
				<div class="panel-body">
					<canvas id="myChartCompetencesFamily"></canvas>
				</div>
			</div>
		</div>
		<div class="col-sm-4">
			<div class="panel panel-default">
				<div class="panel-heading">
					Répartition des compétences par personnage et par niveau.
				</div>
				<div class="panel-body">
					<canvas id="myChartCompetences"></canvas>
				</div>
			</div>
		</div>
		<div class="col-sm-4">
			<div class="panel panel-default">
				<div class="panel-heading">
					Répartition des constructions par territoires.
				</div>
				<div class="panel-body">
					<canvas id="myChartConstructions"></canvas>
				</div>
			</div>
		</div>
	</div>
	
{% endblock %}

{% block javascript %}
	{{ parent() }}
	<script src="{{ app.request.basepath }}/js/Chart.min.js"></script>
	
	<script>
		Chart.defaults.global.responsive = true;
	
		var data = {{ langues|raw }};
		var ctx = document.getElementById("myChart").getContext("2d");
		var myNewChart = new Chart(ctx).Pie(data, {
			animation: true,
			animationSteps: 60,
			animationEasing: "easeOutQuart",
			segmentShowStroke : true,
			segmentStrokeColor : "#fff",
			});

		var data = {{ classes|raw }};
		var ctx = document.getElementById("myChartClasses").getContext("2d");
		var myNewChart = new Chart(ctx).Pie(data, {
			animation: true,
			animationSteps: 60,
			animationEasing: "easeOutQuart",
			segmentShowStroke : true,
			segmentStrokeColor : "#fff",
			});

		var data = {{ genres|raw }};
		var ctx = document.getElementById("myChartGenres").getContext("2d");
		var myNewChart = new Chart(ctx).Pie(data, {
			animation: true,
			animationSteps: 60,
			animationEasing: "easeOutQuart",
			segmentShowStroke : true,
			segmentStrokeColor : "#fff",
			});

		var data = {{ competences|raw }};
		var ctx = document.getElementById("myChartCompetences").getContext("2d");
		var myNewChart = new Chart(ctx).Pie(data, {
			animation: true,
			animationSteps: 60,
			animationEasing: "easeOutQuart",
			segmentShowStroke : true,
			segmentStrokeColor : "#fff",
			});

		var data = {{ competencesFamily|raw }};
		var ctx = document.getElementById("myChartCompetencesFamily").getContext("2d");
		var myNewChart = new Chart(ctx).Pie(data, {
			animation: true,
			animationSteps: 60,
			animationEasing: "easeOutQuart",
			segmentShowStroke : true,
			segmentStrokeColor : "#fff",
			});

		var data = {{ constructions|raw }};
		var ctx = document.getElementById("myChartConstructions").getContext("2d");
		var myNewChart = new Chart(ctx).Pie(data, {
			animation: true,
			animationSteps: 60,
			animationEasing: "easeOutQuart",
			segmentShowStroke : true,
			segmentStrokeColor : "#fff",
			});
	</script>
{% endblock %}