{% extends "base.html.twig" %}

{% block title %}Personnage{% endblock title %}

{% block body %}

    {% include 'personnage/fragment/breadcrumb.twig' with {'name': "Modifier les ingrédients"} %}

    <div class="well well-sm">

        {{ form_start(form) }}
        <h4>{{ form_label(form.personnageIngredients) }}</h4>
        <p>Ajoutez ici les ingredients additionnelles</p>
        <ul class="list-group personnageIngredients"
            data-prototype="{{ form_widget(form.personnageIngredients.vars.prototype)|e }}">
            {% for personnageIngredient in form.personnageIngredients %}
                <li class="list-group-item">
                    <div class="ingredient">
                        {{ form_widget(personnageIngredient.nombre) }}
                        {{ form_widget(personnageIngredient.ingredient) }}
                    </div>
                </li>
            {% endfor %}
        </ul>
        {{ form_end(form) }}
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script type="module">
        import $ from 'jquery';

        $(document).ready(function () {
            function addPersonnageIngredientForm(collectionHolder, $newIngredientLinkLi) {
                // Récupère l'élément ayant l'attribut data-prototype comme expliqué plus tôt
                var prototype = collectionHolder.attr('data-prototype');

                // Remplace '__name__' dans le HTML du prototype par un nombre basé sur
                // la longueur de la collection courante
                var newForm = prototype.replace(/__name__/g, collectionHolder.children().length);

                // Affiche le formulaire dans la page dans un li, avant le lien "ajouter un tag"
                var $newFormLi = $('<li class="list-group-item"></li>').append(newForm);
                $newIngredientLinkLi.before($newFormLi);

                // ajoute un lien de suppression au nouveau formulaire
                addPersonnageIngredientFormDeleteLink($newFormLi);
            }

            function addPersonnageIngredientFormDeleteLink($personnageIngredientFormLi) {
                var $removeFormA = $('<span class="input-group-btn"><a class="btn btn-secondary" href="#"><span class="fa fa-circle-xmark" aria-hidden="true"></span></a></span>');
                $('select', $personnageIngredientFormLi).wrap('<div class= "input-group"></div>');
                $('select', $personnageIngredientFormLi).after($removeFormA);

                $removeFormA.on('click', function (e) {
                    // empêche le lien de créer un « # » dans l'URL
                    e.preventDefault();

                    // supprime l'élément li pour le formulaire de tag
                    $personnageIngredientFormLi.remove();
                });
            }

            var collectionIngredientHolder = $('ul.personnageIngredients');
            var $addPersonnageIngredientLink = $('<a href="#" class="add_personnageIngredient_link">Ajouter un ingredient</a>');
            var $newIngredientLinkLi = $('<li class="list-group-item"></li>').append($addPersonnageIngredientLink);


            collectionIngredientHolder.find('li').each(function () {
                addPersonnageIngredientFormDeleteLink($(this));
            });

            collectionIngredientHolder.append($newIngredientLinkLi);

            $addPersonnageIngredientLink.on('click', function (e) {
                // empêche le lien de créer un « # » dans l'URL
                e.preventDefault();

                // ajoute un nouveau formulaire tag (voir le prochain bloc de code)
                addPersonnageIngredientForm(collectionIngredientHolder, $newIngredientLinkLi);
            });
            $("div#personnageIngredient_personnageIngredients").parent().remove();
        });

    </script>
{% endblock javascripts %}
