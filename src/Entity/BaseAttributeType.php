<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 3.0.3 (doctrine2-annotation) on 2019-09-16 23:01:47.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace App\Entity;

use Doctrine\Common\Collections\ArrayCollection;

/**
 * App\Entity\AttributeType
 *
 * @Table(name="attribute_type")
 * @InheritanceType("SINGLE_TABLE")
 * @DiscriminatorColumn(name="discr", type="string")
 * @DiscriminatorMap({"base":"BaseAttributeType", "extended":"AttributeType"})
 */
class BaseAttributeType
{
    /**
     * @Column(type="string", length=45)
     */
    protected $label;

    /**
     * @Id
     * @Column(type="integer")
     * @GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @OneToMany(targetEntity="CompetenceAttribute", mappedBy="attributeType")
     * @JoinColumn(name="id", referencedColumnName="attribute_type_id", nullable=false)
     */
    protected $competenceAttributes;

    public function __construct()
    {
        $this->competenceAttributes = new ArrayCollection();
    }

    /**
     * Set the value of label.
     *
     * @param string $label
     * @return \App\Entity\AttributeType
     */
    public function setLabel($label)
    {
        $this->label = $label;

        return $this;
    }

    /**
     * Get the value of label.
     *
     * @return string
     */
    public function getLabel()
    {
        return $this->label;
    }

    /**
     * Set the value of id.
     *
     * @param integer $id
     * @return \App\Entity\AttributeType
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Add CompetenceAttribute entity to collection (one to many).
     *
     * @param \App\Entity\CompetenceAttribute $competenceAttribute
     * @return \App\Entity\AttributeType
     */
    public function addCompetenceAttribute(CompetenceAttribute $competenceAttribute)
    {
        $this->competenceAttributes[] = $competenceAttribute;

        return $this;
    }

    /**
     * Remove CompetenceAttribute entity from collection (one to many).
     *
     * @param \App\Entity\CompetenceAttribute $competenceAttribute
     * @return \App\Entity\AttributeType
     */
    public function removeCompetenceAttribute(CompetenceAttribute $competenceAttribute)
    {
        $this->competenceAttributes->removeElement($competenceAttribute);

        return $this;
    }

    /**
     * Get CompetenceAttribute entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getCompetenceAttributes()
    {
        return $this->competenceAttributes;
    }

    public function __sleep()
    {
        return array('label', 'id');
    }
}