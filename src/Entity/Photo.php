<?php

/**
 * LarpManager - A Live Action Role Playing Manager
 * Copyright (C) 2016 Kevin Polez
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-annotation) on 2015-07-25 20:41:16.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace App\Entity;

use App\Entity\BasePhoto;

/**
 * App\Entity\Photo
 *
 */
class Photo extends BasePhoto
{
	/**
	 * @Assert\File(maxSize="6000000")
	 */
	public $file;
		
	/**
	 * Upload file on database
	 */
	public function upload($app)
	{
		// la propriété « file » peut être vide si le champ n'est pas requis
		if (null === $this->file) {
			return;
		}
		
		$path = __DIR__.'/../../../private/stock/';
		$filename = $this->file->getClientOriginalName();
		$extension = $this->file->guessExtension();
		
		// create a unique filename
		$photoFilename = hash('md5',$app['User']->getUsername().$filename . time()).'.'.$extension;
		
		$this->setExtension($this->file->guessExtension());
		
		$image = $app['imagine']->open($this->file->getPathname());
		$image->resize($image->getSize()->widen( 480 ));
		$image->save($path. $photoFilename);
				
		$this->setCreationDate(new \Datetime('NOW'));
		$this->setName($this->file->getClientOriginalName());
		$this->setRealName($photoFilename);
		$this->setFilename($photoFilename);
	
		// « nettoie » la propriété « file » comme vous n'en aurez plus besoin
		$this->file = null;
	}
	
	/**
	 * Transfert une photo du format sql blob à un ficher (en redimenssionnant la photo)
	 * 
	 * @param unknown $app
	 */
	public function blobToFile($app)
	{
		if (null === $this->getData() ) {
			return;
		}
		
		$path = __DIR__.'/../../../private/stock/';
		$filename = $this->getName();
		$extension = $this->getExtension();
		
		$photoFilename = hash('md5',$app['User']->getUsername().$filename . time()).'.'.$extension;
		
		$image = $app['imagine']->read($this->getData());
		$image->resize($image->getSize()->widen( 480 ));
		$image->save($path. $photoFilename);
		
		$this->setFilename($photoFilename);
	}
}