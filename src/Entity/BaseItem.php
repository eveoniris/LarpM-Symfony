<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-annotation) on 2017-08-20 10:39:32.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace App\Entity;

use Doctrine\Common\Collections\ArrayCollection;

/**
 * App\Entity\Item
 *
 * @Table(name="item", indexes={@Index(name="fk_item_qualite1_idx", columns={"quality_id"}), @Index(name="fk_item_statut1_idx", columns={"statut_id"}), @Index(name="fk_item_objet1_idx", columns={"objet_id"})})
 * @InheritanceType("SINGLE_TABLE")
 * @DiscriminatorColumn(name="discr", type="string")
 * @DiscriminatorMap({"base":"BaseItem", "extended":"Item"})
 */
class BaseItem
{
    /**
     * @Id
     * @Column(type="integer", options={"unsigned":true})
     * @GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @Column(type="string", length=45, nullable=true)
     */
    protected $label;

    /**
     * @Column(type="text", nullable=true)
     */
    protected $description;

    /**
     * @Column(type="integer")
     */
    protected $numero;

    /**
     * @Column(type="string", length=2)
     */
    protected $identification;

    /**
     * @Column(type="text", nullable=true)
     */
    protected $special;

    /**
     * @Column(type="string", length=45)
     */
    protected $couleur;

    /**
     * @Column(type="datetime")
     */
    protected $date_creation;

    /**
     * @Column(type="datetime")
     */
    protected $date_update;

    /**
     * @Column(type="integer")
     */
    protected $quantite;

    /**
     * @ManyToOne(targetEntity="Quality", inversedBy="items")
     * @JoinColumn(name="quality_id", referencedColumnName="id", nullable=false)
     */
    protected $quality;

    /**
     * @ManyToOne(targetEntity="Statut", inversedBy="items")
     * @JoinColumn(name="statut_id", referencedColumnName="id")
     */
    protected $statut;

    /**
     * @ManyToOne(targetEntity="Objet", inversedBy="items")
     * @JoinColumn(name="objet_id", referencedColumnName="id", nullable=false)
     */
    protected $objet;

    /**
     * @ManyToMany(targetEntity="Groupe", mappedBy="items")
     */
    protected $groupes;

    /**
     * @ManyToMany(targetEntity="Personnage", mappedBy="items")
     */
    protected $personnages;

    public function __construct()
    {
        $this->groupes = new ArrayCollection();
        $this->personnages = new ArrayCollection();
    }

    /**
     * Set the value of id.
     *
     * @param integer $id
     * @return \App\Entity\Item
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of label.
     *
     * @param string $label
     * @return \App\Entity\Item
     */
    public function setLabel($label)
    {
        $this->label = $label;

        return $this;
    }

    /**
     * Get the value of label.
     *
     * @return string
     */
    public function getLabel()
    {
        return $this->label;
    }

    /**
     * Set the value of description.
     *
     * @param string $description
     * @return \App\Entity\Item
     */
    public function setDescription($description)
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Get the value of description.
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Set the value of numero.
     *
     * @param integer $numero
     * @return \App\Entity\Item
     */
    public function setNumero($numero)
    {
        $this->numero = $numero;

        return $this;
    }

    /**
     * Get the value of numero.
     *
     * @return integer
     */
    public function getNumero()
    {
        return $this->numero;
    }

    /**
     * Set the value of identification.
     *
     * @param string $identification
     * @return \App\Entity\Item
     */
    public function setIdentification($identification)
    {
        $this->identification = $identification;

        return $this;
    }

    /**
     * Get the value of identification.
     *
     * @return string
     */
    public function getIdentification()
    {
        return $this->identification;
    }

    /**
     * Set the value of special.
     *
     * @param string $special
     * @return \App\Entity\Item
     */
    public function setSpecial($special)
    {
        $this->special = $special;

        return $this;
    }

    /**
     * Get the value of special.
     *
     * @return string
     */
    public function getSpecial()
    {
        return $this->special;
    }

    /**
     * Set the value of couleur.
     *
     * @param string $couleur
     * @return \App\Entity\Item
     */
    public function setCouleur($couleur)
    {
        $this->couleur = $couleur;

        return $this;
    }

    /**
     * Get the value of couleur.
     *
     * @return string
     */
    public function getCouleur()
    {
        return $this->couleur;
    }

    /**
     * Set the value of date_creation.
     *
     * @param \DateTime $date_creation
     * @return \App\Entity\Item
     */
    public function setDateCreation($date_creation)
    {
        $this->date_creation = $date_creation;

        return $this;
    }

    /**
     * Get the value of date_creation.
     *
     * @return \DateTime
     */
    public function getDateCreation()
    {
        return $this->date_creation;
    }

    /**
     * Set the value of date_update.
     *
     * @param \DateTime $date_update
     * @return \App\Entity\Item
     */
    public function setDateUpdate($date_update)
    {
        $this->date_update = $date_update;

        return $this;
    }

    /**
     * Get the value of date_update.
     *
     * @return \DateTime
     */
    public function getDateUpdate()
    {
        return $this->date_update;
    }

    /**
     * Set the value of quantite.
     *
     * @param integer $quantite
     * @return \App\Entity\Item
     */
    public function setQuantite($quantite)
    {
        $this->quantite = $quantite;

        return $this;
    }

    /**
     * Get the value of quantite.
     *
     * @return integer
     */
    public function getQuantite()
    {
        return $this->quantite;
    }

    /**
     * Set Quality entity (many to one).
     *
     * @param \App\Entity\Quality $quality
     * @return \App\Entity\Item
     */
    public function setQuality(Quality $quality = null)
    {
        $this->quality = $quality;

        return $this;
    }

    /**
     * Get Quality entity (many to one).
     *
     * @return \App\Entity\Quality
     */
    public function getQuality()
    {
        return $this->quality;
    }

    /**
     * Set Statut entity (many to one).
     *
     * @param \App\Entity\Statut $statut
     * @return \App\Entity\Item
     */
    public function setStatut(Statut $statut = null)
    {
        $this->statut = $statut;

        return $this;
    }

    /**
     * Get Statut entity (many to one).
     *
     * @return \App\Entity\Statut
     */
    public function getStatut()
    {
        return $this->statut;
    }

    /**
     * Set Objet entity (many to one).
     *
     * @param \App\Entity\Objet $objet
     * @return \App\Entity\Item
     */
    public function setObjet(Objet $objet = null)
    {
        $this->objet = $objet;

        return $this;
    }

    /**
     * Get Objet entity (many to one).
     *
     * @return \App\Entity\Objet
     */
    public function getObjet()
    {
        return $this->objet;
    }

    /**
     * Add Groupe entity to collection.
     *
     * @param \App\Entity\Groupe $groupe
     * @return \App\Entity\Item
     */
    public function addGroupe(Groupe $groupe)
    {
        $this->groupes[] = $groupe;

        return $this;
    }

    /**
     * Remove Groupe entity from collection.
     *
     * @param \App\Entity\Groupe $groupe
     * @return \App\Entity\Item
     */
    public function removeGroupe(Groupe $groupe)
    {
        $this->groupes->removeElement($groupe);

        return $this;
    }

    /**
     * Get Groupe entity collection.
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getGroupes()
    {
        return $this->groupes;
    }

    /**
     * Add Personnage entity to collection.
     *
     * @param \App\Entity\Personnage $personnage
     * @return \App\Entity\Item
     */
    public function addPersonnage(Personnage $personnage)
    {
        $this->personnages[] = $personnage;

        return $this;
    }

    /**
     * Remove Personnage entity from collection.
     *
     * @param \App\Entity\Personnage $personnage
     * @return \App\Entity\Item
     */
    public function removePersonnage(Personnage $personnage)
    {
        $this->personnages->removeElement($personnage);

        return $this;
    }

    /**
     * Get Personnage entity collection.
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getPersonnages()
    {
        return $this->personnages;
    }

    public function __sleep()
    {
        return array('id', 'label', 'description', 'numero', 'identification', 'quality_id', 'special', 'couleur', 'date_creation', 'date_update', 'statut_id', 'objet_id', 'quantite');
    }
}