<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-annotation) on 2017-02-09 11:20:18.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace App\Entity;

use Doctrine\ORM\Mapping\Column;
use Doctrine\ORM\Mapping\GeneratedValue;
use Doctrine\ORM\Mapping\Id;

/**
 * App\Entity\Message.
 *
 * @Table(name="message", indexes={@Index(name="fk_message_User1_idx", columns={"auteur"}), @Index(name="fk_message_User2_idx", columns={"destinataire"})})
 *
 * @InheritanceType("SINGLE_TABLE")
 *
 * @DiscriminatorColumn(name="discr", type="string")
 *
 * @DiscriminatorMap({"base":"BaseMessage", "extended":"Message"})
 */
class BaseMessage
{
    #[Id, Column(type: \Doctrine\DBAL\Types\Types::INTEGER, options: ['unsigned' => true]), GeneratedValue(strategy: 'AUTO')]
    protected ?int $id = null;

    /**
     * @Column(type="string", length=45, nullable=true)
     */
    protected $title;

    /**
     * @Column(name="`text`", type="text", nullable=true)
     */
    protected $text;

    /**
     * @Column(type="datetime", nullable=true)
     */
    protected $creation_date;

    /**
     * @Column(type="datetime", nullable=true)
     */
    protected $update_date;

    /**
     * @Column(type="boolean", nullable=true)
     */
    protected $lu;

    /**
     * @ManyToOne(targetEntity="User", inversedBy="messageRelatedByAuteurs")
     *
     * @JoinColumn(name="auteur", referencedColumnName="id", nullable=false)
     */
    protected $UserRelatedByAuteur;

    /**
     * @ManyToOne(targetEntity="User", inversedBy="messageRelatedByDestinataires")
     *
     * @JoinColumn(name="destinataire", referencedColumnName="id", nullable=false)
     */
    protected $UserRelatedByDestinataire;

    public function __construct()
    {
    }

    /**
     * Set the value of id.
     *
     * @param int $id
     *
     * @return \App\Entity\Message
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of title.
     *
     * @param string $title
     *
     * @return \App\Entity\Message
     */
    public function setTitle($title)
    {
        $this->title = $title;

        return $this;
    }

    /**
     * Get the value of title.
     *
     * @return string
     */
    public function getTitle()
    {
        return $this->title;
    }

    /**
     * Set the value of text.
     *
     * @param string $text
     *
     * @return \App\Entity\Message
     */
    public function setText($text)
    {
        $this->text = $text;

        return $this;
    }

    /**
     * Get the value of text.
     *
     * @return string
     */
    public function getText()
    {
        return $this->text;
    }

    /**
     * Set the value of creation_date.
     *
     * @param \DateTime $creation_date
     *
     * @return \App\Entity\Message
     */
    public function setCreationDate($creation_date)
    {
        $this->creation_date = $creation_date;

        return $this;
    }

    /**
     * Get the value of creation_date.
     *
     * @return \DateTime
     */
    public function getCreationDate()
    {
        return $this->creation_date;
    }

    /**
     * Set the value of update_date.
     *
     * @param \DateTime $update_date
     *
     * @return \App\Entity\Message
     */
    public function setUpdateDate($update_date)
    {
        $this->update_date = $update_date;

        return $this;
    }

    /**
     * Get the value of update_date.
     *
     * @return \DateTime
     */
    public function getUpdateDate()
    {
        return $this->update_date;
    }

    /**
     * Set the value of lu.
     *
     * @param bool $lu
     *
     * @return \App\Entity\Message
     */
    public function setLu($lu)
    {
        $this->lu = $lu;

        return $this;
    }

    /**
     * Get the value of lu.
     *
     * @return bool
     */
    public function getLu()
    {
        return $this->lu;
    }

    /**
     * Set User entity related by `auteur` (many to one).
     *
     * @return \App\Entity\Message
     */
    public function setUserRelatedByAuteur(User $User = null)
    {
        $this->UserRelatedByAuteur = $User;

        return $this;
    }

    /**
     * Get User entity related by `auteur` (many to one).
     *
     * @return \App\Entity\User
     */
    public function getUserRelatedByAuteur()
    {
        return $this->UserRelatedByAuteur;
    }

    /**
     * Set User entity related by `destinataire` (many to one).
     *
     * @return \App\Entity\Message
     */
    public function setUserRelatedByDestinataire(User $User = null)
    {
        $this->UserRelatedByDestinataire = $User;

        return $this;
    }

    /**
     * Get User entity related by `destinataire` (many to one).
     *
     * @return \App\Entity\User
     */
    public function getUserRelatedByDestinataire()
    {
        return $this->UserRelatedByDestinataire;
    }

    public function __sleep()
    {
        return ['id', 'title', 'text', 'creation_date', 'update_date', 'lu', 'auteur', 'destinataire'];
    }
}
