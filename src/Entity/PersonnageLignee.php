<?php

/**
 * LarpManager - A Live Action Role Playing Manager
 * Copyright (C) 2016 Kevin Polez
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-annotation) on 2016-06-18 09:29:28.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace App\Entity;

use App\Entity\BasePersonnageLignee;

/**
 * App\Entity\PersonnageLignee
 *
 */
class PersonnageLignee extends BasePersonnageLignee
{
	/**
	 * Fourni la liste des descendants directs
	 */
	public function getDescendants()
	{
		$descendants = array();
		// TODO: getDescendants
		$descendants[] = null;

		return null;
	}

	/**
	 * Trouve tous les descendants correspondant au personnage
	 * @return ArrayCollection $classes
	 */
	public function getDescendantsByPersonnage($personnage_id)
	{
		$qb = $this->createQueryBuilder();
		
		$qb->select('d');
		$qb->from('App\Entity\PersonnageChronologie','d');
		$qb->join('d.personnage','p');
		$qb->where('(d.parent1 = :personnage1 OR d.parent2 = :personnage2)');
		$qb->orderBy('d.id','DESC');
		$qb->setParameter('personnage1', $personnage_id);
		$qb->setParameter('personnage2', $personnage_id);
		
		return $qb->getQuery()->getResult();
	}	
}