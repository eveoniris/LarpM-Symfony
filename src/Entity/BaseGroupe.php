<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-annotation) on 2017-02-09 11:20:17.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace App\Entity;

use Doctrine\Common\Collections\ArrayCollection;

/**
 * App\Entity\Groupe.
 *
 * @Table(name="groupe", indexes={@Index(name="fk_groupe_Users1_idx", columns={"scenariste_id"}), @Index(name="fk_groupe_User2_idx", columns={"responsable_id"}), @Index(name="fk_groupe_topic1_idx", columns={"topic_id"}), @Index(name="fk_groupe_territoire1_idx", columns={"territoire_id"})})
 *
 * @InheritanceType("SINGLE_TABLE")
 *
 * @DiscriminatorColumn(name="discr", type="string")
 *
 * @DiscriminatorMap({"base":"BaseGroupe", "extended":"Groupe"})
 */
class BaseGroupe
{
    /**
     * @Id
     *
     * @Column(type="integer")
     *
     * @GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @Column(type="string", length=100, nullable=true)
     */
    protected $nom;

    /**
     * @Column(type="text", nullable=true)
     */
    protected $description;

    /**
     * @Column(type="integer")
     */
    protected $numero;

    /**
     * @Column(type="string", length=10, nullable=true)
     */
    protected $code;

    /**
     * @Column(type="boolean", nullable=true)
     */
    protected $jeu_maritime;

    /**
     * @Column(type="boolean", nullable=true)
     */
    protected $jeu_strategique;

    /**
     * @Column(type="integer", nullable=true)
     */
    protected $classe_open;

    /**
     * @Column(type="boolean", nullable=true)
     */
    protected $pj;

    /**
     * @Column(type="text", nullable=true)
     */
    protected $materiel;

    /**
     * @Column(name="`lock`", type="boolean")
     */
    protected $lock;

    /**
     * @Column(type="integer", nullable=true)
     */
    protected $richesse;

    /**
     * @OneToMany(targetEntity="Background", mappedBy="groupe")
     *
     * @JoinColumn(name="id", referencedColumnName="groupe_id", nullable=false)
     */
    protected $backgrounds;

    /**
     * @OneToMany(targetEntity="Debriefing", mappedBy="groupe")
     *
     * @JoinColumn(name="id", referencedColumnName="groupe_id", nullable=false)
     */
    protected $debriefings;

    /**
     * @OneToMany(targetEntity="GroupeAllie", mappedBy="groupeRelatedByGroupeId")
     *
     * @JoinColumn(name="id", referencedColumnName="groupe_id", nullable=false)
     */
    protected $groupeAllieRelatedByGroupeIds;

    /**
     * @OneToMany(targetEntity="GroupeAllie", mappedBy="groupeRelatedByGroupeAllieId")
     *
     * @JoinColumn(name="id", referencedColumnName="groupe_allie_id", nullable=false)
     */
    protected $groupeAllieRelatedByGroupeAllieIds;

    /**
     * @OneToMany(targetEntity="GroupeClasse", mappedBy="groupe", cascade={"persist"})
     *
     * @JoinColumn(name="id", referencedColumnName="groupe_id", nullable=false)
     */
    protected $groupeClasses;

    /**
     * @OneToMany(targetEntity="GroupeEnemy", mappedBy="groupeRelatedByGroupeId")
     *
     * @JoinColumn(name="id", referencedColumnName="groupe_id", nullable=false)
     */
    protected $groupeEnemyRelatedByGroupeIds;

    /**
     * @OneToMany(targetEntity="GroupeEnemy", mappedBy="groupeRelatedByGroupeEnemyId")
     *
     * @JoinColumn(name="id", referencedColumnName="groupe_enemy_id", nullable=false)
     */
    protected $groupeEnemyRelatedByGroupeEnemyIds;

    /**
     * @OneToMany(targetEntity="GroupeGn", mappedBy="groupe")
     *
     * @JoinColumn(name="id", referencedColumnName="groupe_id", nullable=false)
     */
    protected $groupeGns;

    /**
     * @OneToMany(targetEntity="GroupeHasIngredient", mappedBy="groupe", cascade={"persist", "remove"})
     *
     * @JoinColumn(name="id", referencedColumnName="groupe_id", nullable=false)
     */
    protected $groupeHasIngredients;

    /**
     * @OneToMany(targetEntity="GroupeHasRessource", mappedBy="groupe", cascade={"persist", "remove"})
     *
     * @JoinColumn(name="id", referencedColumnName="groupe_id", nullable=false)
     */
    protected $groupeHasRessources;

    /**
     * @OneToMany(targetEntity="IntrigueHasGroupe", mappedBy="groupe")
     *
     * @JoinColumn(name="id", referencedColumnName="groupe_id", nullable=false)
     */
    protected $intrigueHasGroupes;

    /**
     * @OneToMany(targetEntity="Personnage", mappedBy="groupe")
     *
     * @JoinColumn(name="id", referencedColumnName="groupe_id", nullable=false)
     */
    protected $personnages;

    /**
     * @OneToMany(targetEntity="Territoire", mappedBy="groupe")
     *
     * @JoinColumn(name="id", referencedColumnName="groupe_id", nullable=false)
     */
    protected $territoires;

    /**
     * @ManyToOne(targetEntity="User", inversedBy="groupeRelatedByScenaristeIds")
     *
     * @JoinColumn(name="scenariste_id", referencedColumnName="id")
     */
    protected $UserRelatedByScenaristeId;

    /**
     * @ManyToOne(targetEntity="User", inversedBy="groupeRelatedByResponsableIds")
     *
     * @JoinColumn(name="responsable_id", referencedColumnName="id")
     */
    protected $UserRelatedByResponsableId;

    /**
     * @ManyToOne(targetEntity="Topic", inversedBy="groupes")
     *
     * @JoinColumn(name="topic_id", referencedColumnName="id", nullable=false)
     */
    protected $topic;

    /**
     * @ManyToOne(targetEntity="Territoire", inversedBy="groupes")
     *
     * @JoinColumn(name="territoire_id", referencedColumnName="id")
     */
    protected $territoire;

    /**
     * @ManyToMany(targetEntity="Document", inversedBy="groupes")
     *
     * @JoinTable(name="groupe_has_document",
     *     joinColumns={@JoinColumn(name="groupe_id", referencedColumnName="id", nullable=false)},
     *     inverseJoinColumns={@JoinColumn(name="document_id", referencedColumnName="id", nullable=false)}
     * )
     *
     * @OrderBy({"code" = "ASC",})
     */
    protected $documents;

    /**
     * @ManyToMany(targetEntity="Item", inversedBy="groupes")
     *
     * @JoinTable(name="groupe_has_item",
     *     joinColumns={@JoinColumn(name="groupe_id", referencedColumnName="id", nullable=false)},
     *     inverseJoinColumns={@JoinColumn(name="item_id", referencedColumnName="id", nullable=false)}
     * )
     *
     * @OrderBy({"label" = "ASC",})
     */
    protected $items;

    public function __construct()
    {
        $this->backgrounds = new ArrayCollection();
        $this->debriefings = new ArrayCollection();
        $this->groupeAllieRelatedByGroupeIds = new ArrayCollection();
        $this->groupeAllieRelatedByGroupeAllieIds = new ArrayCollection();
        $this->groupeClasses = new ArrayCollection();
        $this->groupeEnemyRelatedByGroupeIds = new ArrayCollection();
        $this->groupeEnemyRelatedByGroupeEnemyIds = new ArrayCollection();
        $this->groupeGns = new ArrayCollection();
        $this->groupeHasIngredients = new ArrayCollection();
        $this->groupeHasRessources = new ArrayCollection();
        $this->intrigueHasGroupes = new ArrayCollection();
        $this->personnages = new ArrayCollection();
        $this->territoires = new ArrayCollection();
        $this->documents = new ArrayCollection();
        $this->items = new ArrayCollection();
    }

    /**
     * Set the value of id.
     *
     * @param int $id
     *
     * @return \App\Entity\Groupe
     */
    public function setId($id): static
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of nom.
     *
     * @param string $nom
     *
     * @return \App\Entity\Groupe
     */
    public function setNom($nom)
    {
        $this->nom = $nom;

        return $this;
    }

    /**
     * Get the value of nom.
     *
     * @return string
     */
    public function getNom()
    {
        return $this->nom;
    }

    /**
     * Set the value of description.
     *
     * @param string $description
     *
     * @return \App\Entity\Groupe
     */
    public function setDescription($description)
    {
        $this->description = $description;

        return $this;
    }

    /**
     * Get the value of description.
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * Set the value of numero.
     *
     * @param int $numero
     *
     * @return \App\Entity\Groupe
     */
    public function setNumero($numero)
    {
        $this->numero = $numero;

        return $this;
    }

    /**
     * Get the value of numero.
     *
     * @return int
     */
    public function getNumero()
    {
        return $this->numero;
    }

    /**
     * Set the value of code.
     *
     * @param string $code
     *
     * @return \App\Entity\Groupe
     */
    public function setCode($code)
    {
        $this->code = $code;

        return $this;
    }

    /**
     * Get the value of code.
     *
     * @return string
     */
    public function getCode()
    {
        return $this->code;
    }

    /**
     * Set the value of jeu_maritime.
     *
     * @param bool $jeu_maritime
     *
     * @return \App\Entity\Groupe
     */
    public function setJeuMaritime($jeu_maritime)
    {
        $this->jeu_maritime = $jeu_maritime;

        return $this;
    }

    /**
     * Get the value of jeu_maritime.
     *
     * @return bool
     */
    public function getJeuMaritime()
    {
        return $this->jeu_maritime;
    }

    /**
     * Set the value of jeu_strategique.
     *
     * @param bool $jeu_strategique
     *
     * @return \App\Entity\Groupe
     */
    public function setJeuStrategique($jeu_strategique)
    {
        $this->jeu_strategique = $jeu_strategique;

        return $this;
    }

    /**
     * Get the value of jeu_strategique.
     *
     * @return bool
     */
    public function getJeuStrategique()
    {
        return $this->jeu_strategique;
    }

    /**
     * Set the value of classe_open.
     *
     * @param int $classe_open
     *
     * @return \App\Entity\Groupe
     */
    public function setClasseOpen($classe_open)
    {
        $this->classe_open = $classe_open;

        return $this;
    }

    /**
     * Get the value of classe_open.
     *
     * @return int
     */
    public function getClasseOpen()
    {
        return $this->classe_open;
    }

    /**
     * Set the value of pj.
     *
     * @param bool $pj
     *
     * @return \App\Entity\Groupe
     */
    public function setPj($pj)
    {
        $this->pj = $pj;

        return $this;
    }

    /**
     * Get the value of pj.
     *
     * @return bool
     */
    public function getPj()
    {
        return $this->pj;
    }

    /**
     * Set the value of materiel.
     *
     * @param string $materiel
     *
     * @return \App\Entity\Groupe
     */
    public function setMateriel($materiel)
    {
        $this->materiel = $materiel;

        return $this;
    }

    /**
     * Get the value of materiel.
     *
     * @return string
     */
    public function getMateriel()
    {
        return $this->materiel;
    }

    /**
     * Set the value of lock.
     *
     * @param bool $lock
     *
     * @return \App\Entity\Groupe
     */
    public function setLock($lock)
    {
        $this->lock = $lock;

        return $this;
    }

    /**
     * Get the value of lock.
     *
     * @return bool
     */
    public function getLock()
    {
        return $this->lock;
    }

    /**
     * Set the value of richesse.
     *
     * @param int $richesse
     *
     * @return \App\Entity\Groupe
     */
    public function setRichesse($richesse)
    {
        $this->richesse = $richesse;

        return $this;
    }

    /**
     * Get the value of richesse.
     *
     * @return int
     */
    public function getRichesse()
    {
        return $this->richesse;
    }

    /**
     * Add Background entity to collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function addBackground(Background $background)
    {
        $this->backgrounds[] = $background;

        return $this;
    }

    /**
     * Remove Background entity from collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function removeBackground(Background $background)
    {
        $this->backgrounds->removeElement($background);

        return $this;
    }

    /**
     * Get Background entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getBackgrounds()
    {
        return $this->backgrounds;
    }

    /**
     * Add Debriefing entity to collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function addDebriefing(Debriefing $debriefing)
    {
        $this->debriefings[] = $debriefing;

        return $this;
    }

    /**
     * Remove Debriefing entity from collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function removeDebriefing(Debriefing $debriefing)
    {
        $this->debriefings->removeElement($debriefing);

        return $this;
    }

    /**
     * Get Debriefing entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getDebriefings()
    {
        return $this->debriefings;
    }

    /**
     * Add GroupeAllie entity related by `groupe_id` to collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function addGroupeAllieRelatedByGroupeId(GroupeAllie $groupeAllie)
    {
        $this->groupeAllieRelatedByGroupeIds[] = $groupeAllie;

        return $this;
    }

    /**
     * Remove GroupeAllie entity related by `groupe_id` from collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function removeGroupeAllieRelatedByGroupeId(GroupeAllie $groupeAllie)
    {
        $this->groupeAllieRelatedByGroupeIds->removeElement($groupeAllie);

        return $this;
    }

    /**
     * Get GroupeAllie entity related by `groupe_id` collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getGroupeAllieRelatedByGroupeIds()
    {
        return $this->groupeAllieRelatedByGroupeIds;
    }

    /**
     * Add GroupeAllie entity related by `groupe_allie_id` to collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function addGroupeAllieRelatedByGroupeAllieId(GroupeAllie $groupeAllie)
    {
        $this->groupeAllieRelatedByGroupeAllieIds[] = $groupeAllie;

        return $this;
    }

    /**
     * Remove GroupeAllie entity related by `groupe_allie_id` from collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function removeGroupeAllieRelatedByGroupeAllieId(GroupeAllie $groupeAllie)
    {
        $this->groupeAllieRelatedByGroupeAllieIds->removeElement($groupeAllie);

        return $this;
    }

    /**
     * Get GroupeAllie entity related by `groupe_allie_id` collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getGroupeAllieRelatedByGroupeAllieIds()
    {
        return $this->groupeAllieRelatedByGroupeAllieIds;
    }

    /**
     * Add GroupeClasse entity to collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function addGroupeClasse(GroupeClasse $groupeClasse)
    {
        $this->groupeClasses[] = $groupeClasse;

        return $this;
    }

    /**
     * Remove GroupeClasse entity from collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function removeGroupeClasse(GroupeClasse $groupeClasse)
    {
        $this->groupeClasses->removeElement($groupeClasse);

        return $this;
    }

    /**
     * Get GroupeClasse entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getGroupeClasses()
    {
        return $this->groupeClasses;
    }

    /**
     * Add GroupeEnemy entity related by `groupe_id` to collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function addGroupeEnemyRelatedByGroupeId(GroupeEnemy $groupeEnemy)
    {
        $this->groupeEnemyRelatedByGroupeIds[] = $groupeEnemy;

        return $this;
    }

    /**
     * Remove GroupeEnemy entity related by `groupe_id` from collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function removeGroupeEnemyRelatedByGroupeId(GroupeEnemy $groupeEnemy)
    {
        $this->groupeEnemyRelatedByGroupeIds->removeElement($groupeEnemy);

        return $this;
    }

    /**
     * Get GroupeEnemy entity related by `groupe_id` collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getGroupeEnemyRelatedByGroupeIds()
    {
        return $this->groupeEnemyRelatedByGroupeIds;
    }

    /**
     * Add GroupeEnemy entity related by `groupe_enemy_id` to collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function addGroupeEnemyRelatedByGroupeEnemyId(GroupeEnemy $groupeEnemy)
    {
        $this->groupeEnemyRelatedByGroupeEnemyIds[] = $groupeEnemy;

        return $this;
    }

    /**
     * Remove GroupeEnemy entity related by `groupe_enemy_id` from collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function removeGroupeEnemyRelatedByGroupeEnemyId(GroupeEnemy $groupeEnemy)
    {
        $this->groupeEnemyRelatedByGroupeEnemyIds->removeElement($groupeEnemy);

        return $this;
    }

    /**
     * Get GroupeEnemy entity related by `groupe_enemy_id` collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getGroupeEnemyRelatedByGroupeEnemyIds()
    {
        return $this->groupeEnemyRelatedByGroupeEnemyIds;
    }

    /**
     * Add GroupeGn entity to collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function addGroupeGn(GroupeGn $groupeGn)
    {
        $this->groupeGns[] = $groupeGn;

        return $this;
    }

    /**
     * Remove GroupeGn entity from collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function removeGroupeGn(GroupeGn $groupeGn)
    {
        $this->groupeGns->removeElement($groupeGn);

        return $this;
    }

    /**
     * Get GroupeGn entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getGroupeGns()
    {
        return $this->groupeGns;
    }

    /**
     * Add GroupeHasIngredient entity to collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function addGroupeHasIngredient(GroupeHasIngredient $groupeHasIngredient)
    {
        $this->groupeHasIngredients[] = $groupeHasIngredient;

        return $this;
    }

    /**
     * Remove GroupeHasIngredient entity from collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function removeGroupeHasIngredient(GroupeHasIngredient $groupeHasIngredient)
    {
        $this->groupeHasIngredients->removeElement($groupeHasIngredient);

        return $this;
    }

    /**
     * Get GroupeHasIngredient entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getGroupeHasIngredients()
    {
        return $this->groupeHasIngredients;
    }

    /**
     * Add GroupeHasRessource entity to collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function addGroupeHasRessource(GroupeHasRessource $groupeHasRessource)
    {
        $this->groupeHasRessources[] = $groupeHasRessource;

        return $this;
    }

    /**
     * Remove GroupeHasRessource entity from collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function removeGroupeHasRessource(GroupeHasRessource $groupeHasRessource)
    {
        $this->groupeHasRessources->removeElement($groupeHasRessource);

        return $this;
    }

    /**
     * Get GroupeHasRessource entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getGroupeHasRessources()
    {
        return $this->groupeHasRessources;
    }

    /**
     * Add IntrigueHasGroupe entity to collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function addIntrigueHasGroupe(IntrigueHasGroupe $intrigueHasGroupe)
    {
        $this->intrigueHasGroupes[] = $intrigueHasGroupe;

        return $this;
    }

    /**
     * Remove IntrigueHasGroupe entity from collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function removeIntrigueHasGroupe(IntrigueHasGroupe $intrigueHasGroupe)
    {
        $this->intrigueHasGroupes->removeElement($intrigueHasGroupe);

        return $this;
    }

    /**
     * Get IntrigueHasGroupe entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getIntrigueHasGroupes()
    {
        return $this->intrigueHasGroupes;
    }

    /**
     * Add Personnage entity to collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function addPersonnage(Personnage $personnage)
    {
        $this->personnages[] = $personnage;

        return $this;
    }

    /**
     * Remove Personnage entity from collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function removePersonnage(Personnage $personnage)
    {
        $this->personnages->removeElement($personnage);

        return $this;
    }

    /**
     * Get Personnage entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getPersonnages()
    {
        return $this->personnages;
    }

    /**
     * Add Territoire entity to collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function addTerritoire(Territoire $territoire)
    {
        $this->territoires[] = $territoire;

        return $this;
    }

    /**
     * Remove Territoire entity from collection (one to many).
     *
     * @return \App\Entity\Groupe
     */
    public function removeTerritoire(Territoire $territoire)
    {
        $this->territoires->removeElement($territoire);

        return $this;
    }

    /**
     * Get Territoire entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getTerritoires()
    {
        return $this->territoires;
    }

    /**
     * Set User entity related by `scenariste_id` (many to one).
     *
     * @return \App\Entity\Groupe
     */
    public function setUserRelatedByScenaristeId(User $User = null)
    {
        $this->UserRelatedByScenaristeId = $User;

        return $this;
    }

    /**
     * Get User entity related by `scenariste_id` (many to one).
     *
     * @return \App\Entity\User
     */
    public function getUserRelatedByScenaristeId()
    {
        return $this->UserRelatedByScenaristeId;
    }

    /**
     * Set User entity related by `responsable_id` (many to one).
     *
     * @return \App\Entity\Groupe
     */
    public function setUserRelatedByResponsableId(User $User = null)
    {
        $this->UserRelatedByResponsableId = $User;

        return $this;
    }

    /**
     * Get User entity related by `responsable_id` (many to one).
     *
     * @return \App\Entity\User
     */
    public function getUserRelatedByResponsableId()
    {
        return $this->UserRelatedByResponsableId;
    }

    /**
     * Set Topic entity (many to one).
     *
     * @return \App\Entity\Groupe
     */
    public function setTopic(Topic $topic = null)
    {
        $this->topic = $topic;

        return $this;
    }

    /**
     * Get Topic entity (many to one).
     *
     * @return \App\Entity\Topic
     */
    public function getTopic()
    {
        return $this->topic;
    }

    /**
     * Set Territoire entity (many to one).
     *
     * @return \App\Entity\Groupe
     */
    public function setTerritoire(Territoire $territoire = null)
    {
        $this->territoire = $territoire;

        return $this;
    }

    /**
     * Get Territoire entity (many to one).
     *
     * @return \App\Entity\Territoire
     */
    public function getTerritoire()
    {
        return $this->territoire;
    }

    /**
     * Add Document entity to collection.
     *
     * @return \App\Entity\Groupe
     */
    public function addDocument(Document $document)
    {
        $document->addGroupe($this);
        $this->documents[] = $document;

        return $this;
    }

    /**
     * Remove Document entity from collection.
     *
     * @return \App\Entity\Groupe
     */
    public function removeDocument(Document $document)
    {
        $document->removeGroupe($this);
        $this->documents->removeElement($document);

        return $this;
    }

    /**
     * Get Document entity collection.
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getDocuments()
    {
        return $this->documents;
    }

    /**
     * Add Item entity to collection.
     *
     * @return \App\Entity\Groupe
     */
    public function addItem(Item $item)
    {
        $item->addGroupe($this);
        $this->items[] = $item;

        return $this;
    }

    /**
     * Remove Item entity from collection.
     *
     * @return \App\Entity\Groupe
     */
    public function removeItem(Item $item)
    {
        $item->removeGroupe($this);
        $this->items->removeElement($item);

        return $this;
    }

    /**
     * Get Item entity collection.
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getItems()
    {
        return $this->items;
    }

    public function __sleep()
    {
        return ['id', 'nom', 'description', 'numero', 'code', 'jeu_maritime', 'jeu_strategique', 'scenariste_id', 'classe_open', 'responsable_id', 'topic_id', 'pj', 'materiel', 'lock', 'territoire_id', 'richesse'];
    }
}
