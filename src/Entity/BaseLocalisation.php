<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-annotation) on 2017-02-09 11:20:18.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace App\Entity;

use Doctrine\Common\Collections\ArrayCollection;
use Doctrine\ORM\Mapping\Column;
use Doctrine\ORM\Mapping\GeneratedValue;
use Doctrine\ORM\Mapping\Id;

/**
 * App\Entity\Localisation.
 *
 * @Table(name="localisation")
 *
 * @InheritanceType("SINGLE_TABLE")
 *
 * @DiscriminatorColumn(name="discr", type="string")
 *
 * @DiscriminatorMap({"base":"BaseLocalisation", "extended":"Localisation"})
 */
class BaseLocalisation
{
    #[Id, Column(type: \Doctrine\DBAL\Types\Types::INTEGER, options: ['unsigned' => true]), GeneratedValue(strategy: 'AUTO')]
    protected ?int $id = null;

    /**
     * @Column(type="string", length=45)
     */
    protected $label;

    /**
     * @Column(name="`precision`", type="string", length=450, nullable=true)
     */
    protected $precision;

    /**
     * @OneToMany(targetEntity="Rangement", mappedBy="localisation")
     *
     * @JoinColumn(name="id", referencedColumnName="localisation_id", nullable=false)
     */
    protected $rangements;

    public function __construct()
    {
        $this->rangements = new ArrayCollection();
    }

    /**
     * Set the value of id.
     *
     * @param int $id
     *
     * @return \App\Entity\Localisation
     */
    public function setId($id): static
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return int
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of label.
     *
     * @param string $label
     *
     * @return \App\Entity\Localisation
     */
    public function setLabel($label)
    {
        $this->label = $label;

        return $this;
    }

    /**
     * Get the value of label.
     *
     * @return string
     */
    public function getLabel()
    {
        return $this->label;
    }

    /**
     * Set the value of precision.
     *
     * @param string $precision
     *
     * @return \App\Entity\Localisation
     */
    public function setPrecision($precision)
    {
        $this->precision = $precision;

        return $this;
    }

    /**
     * Get the value of precision.
     *
     * @return string
     */
    public function getPrecision()
    {
        return $this->precision;
    }

    /**
     * Add Rangement entity to collection (one to many).
     *
     * @return \App\Entity\Localisation
     */
    public function addRangement(Rangement $rangement)
    {
        $this->rangements[] = $rangement;

        return $this;
    }

    /**
     * Remove Rangement entity from collection (one to many).
     *
     * @return \App\Entity\Localisation
     */
    public function removeRangement(Rangement $rangement)
    {
        $this->rangements->removeElement($rangement);

        return $this;
    }

    /**
     * Get Rangement entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getRangements()
    {
        return $this->rangements;
    }

    public function __sleep()
    {
        return ['id', 'label', 'precision'];
    }
}
