<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-annotation) on 2017-02-09 11:20:20.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace App\Entity;

use Doctrine\Common\Collections\ArrayCollection;

/**
 * App\Entity\Quality
 *
 * @Table(name="quality")
 * @InheritanceType("SINGLE_TABLE")
 * @DiscriminatorColumn(name="discr", type="string")
 * @DiscriminatorMap({"base":"BaseQuality", "extended":"Quality"})
 */
class BaseQuality
{
    /**
     * @Id
     * @Column(type="integer")
     * @GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @Column(type="string", length=45)
     */
    protected $label;

    /**
     * @Column(type="integer", nullable=true)
     */
    protected $numero;

    /**
     * @OneToMany(targetEntity="Item", mappedBy="quality")
     * @JoinColumn(name="id", referencedColumnName="quality_id", nullable=false)
     */
    protected $items;

    /**
     * @OneToMany(targetEntity="QualityValeur", mappedBy="quality", cascade={"persist", "remove"})
     * @JoinColumn(name="id", referencedColumnName="quality_id", nullable=false)
     */
    protected $qualityValeurs;

    public function __construct()
    {
        $this->items = new ArrayCollection();
        $this->qualityValeurs = new ArrayCollection();
    }

    /**
     * Set the value of id.
     *
     * @param integer $id
     * @return \App\Entity\Quality
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of label.
     *
     * @param string $label
     * @return \App\Entity\Quality
     */
    public function setLabel($label)
    {
        $this->label = $label;

        return $this;
    }

    /**
     * Get the value of label.
     *
     * @return string
     */
    public function getLabel()
    {
        return $this->label;
    }

    /**
     * Set the value of numero.
     *
     * @param integer $numero
     * @return \App\Entity\Quality
     */
    public function setNumero($numero)
    {
        $this->numero = $numero;

        return $this;
    }

    /**
     * Get the value of numero.
     *
     * @return integer
     */
    public function getNumero()
    {
        return $this->numero;
    }

    /**
     * Add Item entity to collection (one to many).
     *
     * @param \App\Entity\Item $item
     * @return \App\Entity\Quality
     */
    public function addItem(Item $item)
    {
        $this->items[] = $item;

        return $this;
    }

    /**
     * Remove Item entity from collection (one to many).
     *
     * @param \App\Entity\Item $item
     * @return \App\Entity\Quality
     */
    public function removeItem(Item $item)
    {
        $this->items->removeElement($item);

        return $this;
    }

    /**
     * Get Item entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getItems()
    {
        return $this->items;
    }

    /**
     * Add QualityValeur entity to collection (one to many).
     *
     * @param \App\Entity\QualityValeur $qualityValeur
     * @return \App\Entity\Quality
     */
    public function addQualityValeur(QualityValeur $qualityValeur)
    {
        $this->qualityValeurs[] = $qualityValeur;

        return $this;
    }

    /**
     * Remove QualityValeur entity from collection (one to many).
     *
     * @param \App\Entity\QualityValeur $qualityValeur
     * @return \App\Entity\Quality
     */
    public function removeQualityValeur(QualityValeur $qualityValeur)
    {
        $this->qualityValeurs->removeElement($qualityValeur);

        return $this;
    }

    /**
     * Get QualityValeur entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getQualityValeurs()
    {
        return $this->qualityValeurs;
    }

    public function __sleep()
    {
        return array('id', 'label', 'numero');
    }
}